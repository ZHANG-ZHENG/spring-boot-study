<!doctype html>
<html lang="en">
 <head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1, maximum-scale=1, user-scalable=no">
  <title>websocket-java-socketio</title>
  <script src="2.3.1/socket.io.min.js"></script>
 </head>
<body>
<div>
	<img id="image1" src=""  onclick="getMousePos()" />
</div>
<h1>Socket.io Test</h1>
<div><p id="status">Waiting for input</p></div>
<div><p id="message">hello world!</p></div>
<button id="connect" onClick='connect()'/>Connect</button>
<button id="disconnect" onClick='disconnect()'>Disconnect</button>
<button id="send" onClick='send()'/>Send Message</button>
<button id="send2" onClick='send2()'/>Send2 Message</button>
</body>

<script type="text/javascript">

/** https://cdn.bootcdn.net/ajax/libs/socket.io/2.3.1/socket.io.min.js
* 前端js的 socket.emit("事件名","参数数据")方法，是触发后端自定义消息事件的时候使用的,
* 前端js的 socket.on("事件名",匿名函数(服务器向客户端发送的数据))为监听服务器端的事件
**/
    var socket = io.connect("http://localhost:9092?mac=2"); 
    var firstconnect = true;
 
function connect() {
    if(firstconnect) {

        //socket.on('reconnect', function(){ status_update("Reconnected to Server"); });
        //socket.on('reconnecting', function( nextRetry ){ status_update("Reconnecting in "
        //+ nextRetry + " seconds"); });
        //socket.on('reconnect_failed', function(){ message("Reconnect Failed"); });
        //firstconnect = false;
    } else {
        socket.socket.reconnect();
    }
}

//监听服务器连接事件
socket.on('connect', function(){ status_update("Connected to Server"); });
//监听服务器关闭服务事件
socket.on('disconnect', function(){ status_update("Disconnected from Server"); });
//监听服务器端发送消息事件
socket.on('messageevent', function(data) { 
	message(data)
}); 
socket.on('imgEvent', function(data) { 
	//console.log("received imgEvent data",data);
	var bytes = data;
	var blob = new Blob([bytes], { type: "image/png" });
	var url = URL.createObjectURL(blob);
	document.getElementById('image1').src = url;	
});
//断开连接
function disconnect() {
    socket.disconnect();
}
 
function message(data) {
    document.getElementById('message').innerHTML = "Server says: " + data;
}
 
function status_update(txt){
    document.getElementById('status').innerHTML = txt;
}
 
function esc(msg){
    return msg.replace(/</g, '<').replace(/>/g, '>');
}
//点击发送消息触发 
function send() {   
    //console.log("点击了发送消息，开始向服务器发送消息")
            var msg = "我很好的,是的．"; 
            socket.emit('messageevent', {msgContent: msg});  
}; 
function send2() {   
    //console.log("点击了发送消息，开始向服务器发送消息")
            var msg = "img"; 
            socket.emit('messageevent', {msgContent: msg});  
};
function getMousePos(event) {
	var e = event || window.event;
	var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
	var scrollY = document.documentElement.scrollTop || document.body.scrollTop;
	var x = e.pageX || e.clientX + scrollX;
	var y = e.pageY || e.clientY + scrollY;
	console.log("x="+x+",y="+y);
	var msg = x+","+y; 
	socket.emit('messageevent', {msgContent: msg});  
}
</script>
</html>